<p>twig file rendered</p><br>
<a id="publish2-button">update to all published 2</a><br>
<a id="private-button">update to me only (private)</a><br>
<a id="discover-button">discover</a><br>
<div id="discovered-things"></div>
{#<a id="subscribe-button">subscribe</a><br>#}
<script>
    console.log('test123');
    document.getElementById('publish2-button').addEventListener('click', function (event) {
        event.preventDefault();
        fetch('/publish2');
        // .then(response => console.log(response))
    });
    document.getElementById('private-button').addEventListener('click', function (event) {
        event.preventDefault();
        fetch('/private')
            .then(response => console.log(response));
    });
    // werkt niet Unknown: "mercure" function.
    {# const eventSource = new EventSource("{{ mercure([ #}
    {#    'https://example.com/books/1', #}
    {#    'https://example.com/books/2', #}
    {#    'https://example.com/reviews/{id}' #}
    {# ])|escape('js') }}"); #}

    const eventSource2 = new EventSource([
        'http://127.0.0.1:3000/.well-known/mercure?topic=' + encodeURIComponent('https://example.com/books/2')
    ]);
    // eventSource.onmessage = event => {
    //     // Will be called every time an update is published by the server
    //     console.log(JSON.parse(event.data));
    // };
    eventSource2.onmessage = event => {
        // Will be called every time an update is published by the server
        console.log('eventSource2.onmessage');
        console.log(JSON.parse(event.data));
    };

    // eventSource.onmessage = event => {
    //     console.log(JSON.parse(event.data));
    // }
    //
    // // todo: deze aan de praat krijgen 1
    // const eventSource3 = new EventSource([
    //     'http://127.0.0.1:3000/.well-known/mercure?topic=' +
    //     encodeURIComponent('https://example.com/books/3')
    //     // + '&subscribe=' + 'https://example.com/books/3'
    // ],
    //     {
    //     withCredentials: true
    // })
    // ;
    // eventSource3.onmessage = event => {
    //     // Will be called every time an update is published by the server
    //     console.log('eventSource3.onmessage');
    //     console.log(JSON.parse(event.data));
    // };

    // todo: deze aan de praat krijgen 2
    document.getElementById('discover-button').addEventListener('click', function (event) {
        event.preventDefault();
        fetch('/discover') // Has Link: <https://127.0.0.1:3000/.well-known/mercure>; rel="mercure"
            .then(response => response.json())
            .then((data) => {
                console.log(data);
                console.log(data.id);
                var box = document.getElementById('discovered-things');

                var someUrl = document.createElement('a');
                var link = document.createTextNode("Subscribe to topic and receive private messages");
                someUrl.append(link);
                // someUrl.setAttribute('href', data.id);
                // someUrl.setAttribute('class', 'discovered-link');
                someUrl.addEventListener('click', function (event) {
                    event.preventDefault();
                    // fetch(data.id) // Has Link: <http://localhost:3000/.well-known/mercure>; rel="mercure"
                    fetch('subscribe') // Has Link: <http://localho st:3000/.well-known/mercure>; rel="mercure"
                        .then(response => {
                            console.log(response);
                            console.log(response.headers);
                            // // Extract the hub URL from the Link header
                            const hubUrl = response.headers.get('Link').match(/<([^>]+)>;\s+rel=(?:mercure|"[^"]*mercure[^"]*")/)[1];
                            console.log('hubUrl');
                            console.log(hubUrl);
                            console.log(hubUrl.match(/http:\/\/([^\/]+)\/?.*/));
                            const newHubUrl = hubUrl.replace(hubUrl.match(/http:\/\/([^\/]+)\/?.*/)[1], '127.0.0.1:3000');
                                console.log('newHubUrl')
                            console.log(newHubUrl)
                            // Append the topic(s) to subscribe as query parameter
                            const hub = new URL(newHubUrl, window.origin);
                            console.log('hub')
                            console.log(hub)
                            // hub.searchParams.append('topic', 'https://example.com/books/{id}');

                            hub.searchParams.append('topic', 'https://example.com/books/3');

                            // Subscribe to updates
                            // const eventSource4 = new EventSource(hub);
                            // console.log('eventSource4')
                            // console.log(eventSource4)
                            // eventSource4.onmessage = event => {
                            //     console.log(event)
                            //     console.log(event.data);
                            // }

                            // // todo: deze aan de praat krijgen 1
                            const eventSource4 = new EventSource([
                                'http://127.0.0.1:3000/.well-known/mercure?topic=' +
                                encodeURIComponent('https://example.com/books/3')
                                + '&subscribe=' + 'https://example.com/books/3'
                            ],
                                {
                                withCredentials: true
                            })
                            eventSource4.onmessage = event => {
                                console.log(event)
                                console.log(event.data);
                            }

                            // console.log(response);
                            // console.log(response.headers);
                            // // Extract the hub URL from the Link header
                            // const hubUrl = response.headers.get('Link').match(/<([^>]+)>;\s+rel=(?:mercure|"[^"]*mercure[^"]*")/)[1];
                            // console.log(hubUrl);
                            // console.log(hubUrl.match(/https:\/\/([^\/]+)\/?.*/));
                            // const newHubUrl = hubUrl.replace(hubUrl.match(/https:\/\/([^\/]+)\/?.*/)[1], 'localhost:3000');
                            // console.log(newHubUrl);
                            // // Append the topic(s) to subscribe as query parameter
                            // const hub = new URL(newHubUrl, window.origin);
                            // hub.searchParams.append('topic', 'https://example.com/books/{id}');
                            // // hub.searchParams.append('topic', 'https://example.com/books/3');
                            // // Subscribe to updates
                            // // const eventSource = new EventSource(hub);
                            // const eventSource = new EventSource(hub, {
                            //     withCredentials: true
                            // });
                            // console.log(eventSource);
                            // eventSource.onmessage = event => console.log(event.data);
                        });
                });

                box.append(someUrl);
            });
    });
    // var discoveredLinks = document.getElementsByClassName('discovered-link');
    // console.log('disoveredLinks')
    // console.log(discoveredLinks)
    // discoveredLinks.forEach(function (discoveredLink) {
    //     console.log(discoveredLink);
    //     console.log('discoveredLink');
    //     discoveredLink.addEventListener('click', function (event) {
    //         event.preventDefault();
    //         fetch('/books3') // Has Link: <http://localhost:3000/.well-known/mercure>; rel="mercure"
    //             .then(response => {
    //                 console.log(response);
    //                 console.log(response.headers);
    //                 // Extract the hub URL from the Link header
    //                 const hubUrl = response.headers.get('Link').match(/<([^>]+)>;\s+rel=(?:mercure|"[^"]*mercure[^"]*")/)[1];
    //                 console.log(hubUrl);
    //                 console.log(hubUrl.match(/https:\/\/([^\/]+)\/?.*/));
    //                 const newHubUrl = hubUrl.replace(hubUrl.match(/https:\/\/([^\/]+)\/?.*/)[1], 'localhost:3000');
    //                 console.log(newHubUrl);
    //                 // Append the topic(s) to subscribe as query parameter
    //                 const hub = new URL(newHubUrl, window.origin);
    //                 hub.searchParams.append('topic', 'https://example.com/books/{id}');
    //                 // hub.searchParams.append('topic', 'https://example.com/books/3');
    //                 // Subscribe to updates
    //                 // const eventSource = new EventSource(hub);
    //                 const eventSource = new EventSource(hub, {
    //                     withCredentials: true
    //                 });
    //                 console.log(eventSource);
    //                 eventSource.onmessage = event => console.log(event.data);
    //             });
    //     });
    // });
    document.getElementById('subscribe-button').addEventListener('click', function (event) {
        event.preventDefault();
        fetch('/subscribe')
            .then(response => {
                console.log('response');
                console.log(response);
            });
    });
</script>
